############################################################
## Automation Class - Links	and Downloads			      ##
############################################################
Local Artifactory Instance: http://192.168.1.139:8081 (Credential jfrog/jfrog)
Wireless Router: 
Available on Artifactory: jswampup-remote-cache
1. Git 2.8.1
   Curl 7.49
   jdk 8 
   Jenkins - Port 9090
   Artifactory-Pro Registry-4.8.0 - Port 9091

2. References
Aritfactory REST API - https://github.com/JFrogDev/artifactory-scripts.git
User Plugin - https://github.com/JFrogDev/artifactory-user-plugins/blob/master/CONTRIBUTING.md

################################################################
## Create a sandbox - suggestion                              ##
################################################################
mkdir $HOME/swampup

################################################################
## Create API Keys from Lab Artifactory - save your API Key   ##
################################################################
1. git clone https://github.com/jfrogtraining/advanced-automation-scripts.git
cd advanced-automation-scripts
curl -uadmin:password -X PUT http://192.168.1.139:8081/artifactory/api/security/users/<yourusername> -H "content-type: application/vnd.org.jfrog.artifactory.security.User+json" -T user.json
curl -u<user>:<password> -X POST http://192.168.1.139:8081/artifactory/api/security/apiKey

################################################################
## Start User Plugin Development Environment                  ##
################################################################
# This will install your local Artifactory on your laptop for your user plugin development. 
1. git clone https://github.com/jfrogtraining/artifactory-user-plugins-devenv.git
2  git clone https://github.com/JFrogDev/artifactory-user-plugins.git
cd artifactory-user-plugins-devenv
./gradlew workOnPlugin -DpluginName=storage/layoutProperties
cd $HOME/swampup

################################################################
## Use CLI1.2 to get Artifactory License from JFMC to install on local artifactory
## If installing with Homebrew
export HOMEBREW_BOTTLE_DOMAIN=http://192.168.1.139:8081/artifactory
brew install jfrog-cli-go
## else 
browse to: https://192.168.0.1:8081/artifactory/jswampup-remote-cache/cli-1.2
download binary appropriate to your distribution onto your 
##

jfrog mc c --url=http://192.168.1.139:8085 --user=admin --password=password --interactive=false
jfrog mc rti attach-lic <userName> --bucket-id=1831531631 --bucket-key=68b5f7dcbe7c25dcf2ef2952c7429b99ec217d01a832eb6c4261738187d2e097  --license-path=local-store/artifactory.lic

################################################################
## Start local Artifactory Port 8088 - http://localhost:8088/artifactory
cd artifactory-user-plugins-devenv
./gradlew pre
./gradlew start

#########################################################################################
## Populate your local artifactory with custom layout data                             ##
#########################################################################################
#Use User Plugin to create a custom layout
cd artifactory-user-plugins-devenv
./gradlew workOnPlugin -DpluginName=config/repoLayoutsConfig

#########################################################################################
## Lets go get the data from lab artifactory and upload to your local repository using CLI 
jfrog rt config --url="http://192.168.1.139:8081/artifactory/" --user=<user name> --password=<password>
jfrog rt dl jswampup-remote-cache/aauto-assets/datastore/

#adding custom layout
curl -uadmin:password -X POST http://localhost:8088/artifactory/api/plugins/execute/addLayout -T swampupLayout.json

#create repository uploaded-local:
curl -uadmin:password -H "Content-Type: application/vnd.org.jfrog.artifactory.repositories.LocalRepositoryConfiguration+json" -X PUT http://localhost:8088/artifactory/api/repositories/uploaded-local -T uploaded-local.json

#Upload data:
jfrog rt c --url="http://localhost:8088/artifactory/" --user=admin --password=password
cd aauto-assets/datastore
jfrog rt u --flat=false --props="uploadCall=1" "./*" uploaded-local
cd $HOME/swampup

#########################################################################################
## AQL Search on the custom data loaded                                                ##
#########################################################################################
#AQL Section
curl -uadmin:password -X POST http://localhost:8088/artifactory/api/search/aql -d 'items.find()'
jfrog rt mv "uploaded-local/*12*" "ext-release-local"

curl -uadmin:password -X POST http://localhost:8088/artifactory/api/search/aql -d 'items.find()'

curl -uadmin:password -X POST http://localhost:8088/artifactory/api/search/aql -d 'items.find().include("path", "@layout.folderIntegrationRevision", "stat.downloads")'

curl -uadmin:password -X POST http://localhost:8088/artifactory/api/search/aql -d 'items.find().include("path", "@layout.folderIntegrationRevision", "@layout.environment", "stat.downloads")'

curl -uadmin:password -X POST http://localhost:8088/artifactory/api/search/aql -d 'items.find({"@layout.folderIntegrationRevision" : {"$match" : "2015*"}}).include("path", "@layout.folderIntegrationRevision", "@layout.environment", "stat.downloads")'

curl -uadmin:password -X POST http://localhost:8088/artifactory/api/search/aql -d 'items.find({"@layout.folderIntegrationRevision" : {"$match" : "2015*"}, "@layout.environment" : "PRD" }).include("path", "@layout.folderIntegrationRevision", "@layout.environment", "stat.downloads")'

curl -uadmin:password -X POST http://localhost:8088/artifactory/api/search/aql -T aql.json

#########################################################################################
## Using clean up scripts                                                              ##
#########################################################################################
git clone https://github.com/JFrogDev/artifactory-scripts.git
groovy artifactory-scripts/cleanup/aqlCleanup.groovy

#Or delete with CLI
jfrog rt del --props="layout.environment=DEV" "ext-release-local/*"

#Upload a new version using placeholders:
cd aauto-assets/datastore
jfrog rt u --flat=false --recursive=true --props="uploadCall=2" "(*)/(*)/(*)-2015(*)/(*)-(*)-2015(*)" uploaded-local/{1}/{2}/1.7.0-2015{4}/{5}-1.7.0-2015{7}
